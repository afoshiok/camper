// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
  previewFeatures = ["driverAdapters", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions = [pgcrypto]
}

model MemberTypes {
  id  Int @id @default(autoincrement())
  type_name String
  members Member[]
}

model CampaignTypes {
  id  Int @id @default(autoincrement())
  type_name String
  campaigns Campaign[]
}

model CampaignStatus {
  id Int @id @default(autoincrement())
  status_name String
  Campaigns Campaign[]
}

model VisitStatus {
  id  Int @id @default(autoincrement())
  status_name String
  Visits Visit[]
}

model Visit {
  id  Int @id @default(autoincrement())
  door_id  Int
  volunteer_id  Int
  campaign_id String  @db.Uuid
  visit_status  Int 
  VisitStatusId VisitStatus @relation(fields: [visit_status], references: [id])
  CampaignId  Campaign  @relation(fields: [campaign_id], references: [id])
  VolunteerId CampaignMember  @relation(fields: [volunteer_id], references: [id])
  DoorId  Door  @relation(fields: [door_id], references: [id])
}

model Member {
  id  Int @id @default(autoincrement())
  first_name  String
  last_name String
  email String
  password String
  member_type Int
  MemberTypeId MemberTypes  @relation(fields: [member_type], references: [id])
  Campaigns CampaignMember[]
}

model Campaign {
  id  String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name  String  @db.VarChar(100)
  description String  @db.VarChar()
  city  String?  
  state String
  country String  
  zipcode String?  
  campaign_type Int
  date_created DateTime
  end_date  DateTime
  campaign_status Int
  CampaignTypeId  CampaignTypes @relation(fields: [campaign_type], references: [id])
  CampaignStatusId CampaignStatus @relation(fields: [campaign_status], references: [id])
  Members CampaignMember[]
  Vists Visit[]
}

model CampaignMember {
  id  Int  @id @default(autoincrement())
  campaign_id String @db.Uuid
  member_id  Int
  CampaignId Campaign  @relation(fields: [campaign_id], references: [id])
  MemberId  Member  @relation(fields: [member_id], references: [id])
  Visits Visit[]
}

model Door {
  id  Int @id @default(autoincrement())
  first_name  String  @db.Char(20)
  last_name String  @db.Char(20)
  address1  String  @db.VarChar(50)
  address2  String  @db.VarChar(50)
  city  String  @db.Char(20)
  state String  @db.Char(20)
  country String  @db.Char(40)
  Visits Visit[]
}